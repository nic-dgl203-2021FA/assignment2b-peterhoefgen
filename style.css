/*
    Grid set up for screens smaller than 700px, the grid is 1 column and four rows.
*/

div {
    display: grid;
    grid-template-columns: 2fr;
    grid-template-rows: repeat(4, 1fr);
    column-gap: 9px;
    margin: 0;
    padding: 0;    
}

/*
    button - initial stylings for the button element
*/

button {
    background-color: blueviolet;
    color: white;
    height: 25%;
    width: 50%;
}

/*
    button - set up animation for button hover property
*/

button:hover {
    transform: scale(0.75);
    background-color: blue;
    border-color: thistle;
}

/*
    h2 - initial element stylings for the h2 element
*/

h2 {
    color: violet;
    font-family: courier, sans-serif;
    font-size: 0.75em;
    animation-name: scale;
    animation-duration: 3s;

}

/*
    h2 - the keyframes below allow the h2 animation to grow and then reset to show
    a bounce effect.
*/

@keyframes scale {
    0% {transform: scale(0.5);}
    85% {transform: scale(1.5);}
    100% {transform: scale(1);}
}

/*
.sGrover - gives the initial width for the sGrover image.
*/

img {
    animation: spin 5s linear infinite;
    animation-play-state: paused;
}

/*
    .sGrover - the animation is applied to the hover state of the img allowing
    the image to rotate when the cursors hovers on it.
*/

img:hover {
    width: 50%;
    animation-play-state: running;
}

/*
    .sGrover - this keyframe creates the rotation animation for the svg image. 
*/

@keyframes spin {
    100% {
        transform: rotate(360deg);
    }
}

/*
    .cloud1 and cloud2 target the cloud images 
    and applies the cloudMovement keyframe
*/

#cloud1 {
    animation: cloudMovement 20s linear infinite;
}

#cloud2 {
    animation: cloudMovement 25s 5s linear infinite backwards;
}

/*
    This keyframe allows the start of the cloud movement animation
*/

@keyframes cloudMovement {
    0% {
        transform: translateX(-150px);
    }
    100% {
        transform: translateX(820px);
    }
}

/*
    Animation Part 2 CSS:
*/

#square {
    offset-path: path('M22.3,265,121,215l88,63.6,65-44.3,79,44.3');
    animation: shift 8.5s linear both; 
}

@keyframes shift {
    0% {
        offset-distance: 0%;
    }
    100% {
        offset-distance: 100%;
    }
}

/*
    SVG Rectangle Animation
*/

/*
    This sets up the fade out animation for the inner rectangle
*/

#innerRect {
    animation: fadeOut 1.2s both;
}

/*
    Reversing the fadeOut animation for the outer rectangle so it fades in.
*/

#outerRect {
    animation: fadeOut 1.1s reverse both;
}

/*
    Push keyframe set up to show inner rectangle fade out
*/

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}


/*
Add @media ruleset for screens larger that will set up and display a larger grid.
*/

@media screen and (min-width: 700px) {
    div {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr 1fr 1fr;
    }
}